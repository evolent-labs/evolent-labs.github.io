{"/boosting":{"title":"Evolent Boosting","data":{"":"Our Store\nTired of the same old point A to B boosts? Yeah, us too. Thatâ€™s why we built a next-level boosting system.\nOur system is packed with variety, real progression, and features that actually make sense.","installation#Installation":"","step-1-install-dependencies#Step 1: Install Dependencies":"Ensure you have the following resources installed:\nAny of the inventory scripts defined in Configuration\nox_lib\noxmysql\nox_target\nbl_ui Replaceable with other mini-games\nUse any supported framework:\nOX,\nQBOX,\nESX,\nQB,\nor Standalone","step-2-download-the-resource#Step 2: Download the Resource":"Download & extract the evolent_boosting resource from Cfx.re and place it inside your resources folder.","step-3-execute-all-sql-files#Step 3: Execute all sql files":"Execute all sql files in sql folder.","step-3-add-items-to-ox_inventory#Step 3: Add Items to ox_inventory":"Add this to your ox_inventory/data/items.lua:\n[\"ghostlink\"] = {\n    label = \"GhostLink\",\n    weight = 5000,\n    stack = true,\n    close = true,\n    client = {\n        event = 'evolent_boosting:startHacking'\n    }\n},\n-- add this only if you won't use cmd\n[\"boostingtablet\"]          = {\n    label = \"Boosting Tablet\",\n    weight = 5000,\n    stack = true,\n    close = true,\n    client = {\n      export = 'evolent_boosting.openTablet'\n    }\n},","step-4-configuration#Step 4: Configuration":"Configure the config.lua. Visit Configuration for a full breakdown.","step-5-starting-the-script#Step 5: Starting the Script":"Add evolent_boosting to your server's resource list and start the script.\nensure evolent_boosting"}},"/boosting/Commands":{"title":"Commands","data":{"commands#Commands":"/generatecontracts id -- lets you regenerate/generate specified users contracts"}},"/boosting/Config":{"title":"Evolent Boosting","data":{"":"This is out of the box config example.\nConfig = {\n    Framework = 'ox',                                          -- ox, qbx, qb, esx\n    Notify = 'ox_lib',                                         -- ox_lib\n    Target = 'ox_target',                                      -- ox_target\n    ShowText = 'ox_lib',                                       -- ox_lib\n    Dispatch = \"\",                                             -- fd, ps, cd, tk, rcore, kartik, lb\n    Inventory = \"ox\",                                          -- ox, qs, qb, codem, core, origen, tgiann\n    Command = 'opentablet',                                    -- add cmd name or leave empty for not using\n    AvailableContracts = 6,                                    -- Max amount of available contracts per reset\n    DefaultAvatarUrl = 'https://i.ibb.co/jPtqTj3m/Vector.png', -- Default profile avatar url\n    AppName = 'EVOLENTBOOSTING',                               -- UI Application name\n    AppLogoUrl = 'https://i.ibb.co/jPtqTj3m/Vector.png',       -- UI Application logo url\n    ResetTime = 60,                                            -- How often resets happen for available contracts in minutes\n    BaseElo = 250,                                             -- BASE ELO\n    EloModifier = 2,                                           -- BASE ELO MODIFIER\n    EnableActionSFX = true,                                    -- Enables SFX for boosting actions\n    MarketGeneration = 60,                                     -- Adds new contracts to the market every X minutes\n    GeneratedContractsByMarket = 10,                           -- How many contracts will be generated each period\n    TransactionAccount = 'cash',                               -- Account which will be used in market transactions\n    MoneyRewards = {                                           -- Don't touch this (used for validation)\n        cash = true,\n        black_money = true,\n        bank = true,\n        money = true\n    },\n    LogService = '',       -- fmsdk\n    QuickKeyBind = \"H\",    -- Quick key bind for current boosting progress\n    LatentBudget = 100000, -- DO NOT TOUCH THIS IF YOU DON'T KNOW WHY IT IS THERE\n    HighTierHacks = {      -- High Tier Hacks range\n        min = 5,\n        max = 15\n    },\n    BaseCoolDown = 6000,       -- Base cooldown for tracker position\n    AdditionalCoolDown = 3000, -- Additional cooldown for tracker position\n    FDLaptop = false,          -- TOGGLE FD LAPTOP COMPATIBILITY\n    Classes = {\n        {\n            label = 'D',\n            requiredLevel = 1,\n            elo = { min = 70, max = 100 },\n            rep = { min = 70, max = 100 },\n            duration = 40,\n            chance = 100,\n            cars = {\n                { model = 'emperor',    label = 'EMPEROR' },\n                { model = 'premier',    label = 'PREMIER' },\n                { model = 'intruder',   label = 'INTRUDER' },\n                { model = 'stanier',    label = 'STANIER' },\n                { model = 'dilettante', label = 'DILETTANTE' },\n                { model = 'primo',      label = 'PRIMO' },\n                { model = 'picador',    label = 'PICADOR' }\n            },\n            itemRewards = {\n                money = { min = 100, max = 300 },\n                black_money = { min = 1000, max = 3000 }\n            },\n            -- marketOnly = false,\n            -- requiredCops = 4,\n            -- overwriteBidding = 16,\n            -- maxPerReset = 90,\n        },\n        {\n            label = 'C',\n            requiredLevel = 2,\n            elo = { min = 50, max = 70 },\n            rep = { min = 50, max = 70 },\n            duration = 40,\n            chance = 100,\n            cars = {\n                { model = 'rumpo',      label = 'RUMPO VAN' },\n                { model = 'buccaneer',  label = 'BUCCANEER' },\n                { model = 'chino',      label = 'CHINO' },\n                { model = 'washington', label = 'WASHINGTON' },\n                { model = 'virgo',      label = 'VIRGO' },\n                { model = 'premier',    label = 'PREMIER' },\n                { model = 'minivan',    label = 'MINIVAN' },\n                { model = 'pigalle',    label = 'PIGALLE' },\n                { model = 'fagaloa',    label = 'FAGALOA' },\n                { model = 'schafter2',  label = 'SCHAFTER' }\n            },\n            itemRewards = {\n                money = { min = 300, max = 500 },\n                black_money = { min = 3000, max = 8000 }\n            }\n        },\n        {\n            label = 'B',\n            requiredLevel = 3,\n            elo = { min = 30, max = 50 },\n            rep = { min = 30, max = 50 },\n            duration = 40,\n            chance = 100,\n            cars = {\n                { model = 'sultan',       label = 'SULTAN' },\n                { model = 'buffalo',      label = 'BUFFALO' },\n                { model = 'kuruma',       label = 'KURUMA' },\n                { model = 'futo',         label = 'FUTO' },\n                { model = 'feltzer2',     label = 'FELTZER' },\n                { model = 'comet2',       label = 'COMET' },\n                { model = 'ninef',        label = '9F' },\n                { model = 'carbonizzare', label = 'CARBONIZZARE' },\n                { model = 'kuruma',       label = 'KURUMA' }\n            },\n            itemRewards = {\n                money = { min = 500, max = 1000 },\n                black_money = { min = 8000, max = 15000 }\n            }\n        },\n        {\n            label = 'A',\n            requiredLevel = 4,\n            elo = { min = 20, max = 30 },\n            rep = { min = 20, max = 30 },\n            duration = 50,\n            chance = 100,\n            cars = {\n                { model = 'vigero3',    label = 'VIGERO ZX' },\n                { model = 'elegy',      label = 'ELEGY RH8' },\n                { model = 'driftzr350', label = 'ZR350' },\n                { model = 'comet3',     label = 'COMET RETRO CUSTOM' },\n                { model = 'omnisegt',   label = 'OMNIS e-GT' },\n                { model = 'massacro',   label = 'MASSACRO' },\n                { model = 'jester4',    label = 'JESTER RR' },\n                { model = 'neon',       label = 'NEON' },\n                { model = 'jugular',    label = 'JUGULAR' },\n                { model = 'drafter',    label = '8F DRAFTER' },\n                { model = 'komoda',     label = 'KOMODA' },\n                { model = 'paragon',    label = 'PARAGON R' },\n                { model = 'vstr',       label = 'V-STR' },\n                { model = 'calico',     label = 'CALICO GTF' }\n            },\n            itemRewards = {\n                money = { min = 1000, max = 1500 },\n                black_money = { min = 15000, max = 30000 }\n            }\n        },\n        {\n            label = 'S',\n            requiredLevel = 5,\n            elo = { min = 15, max = 20 },\n            rep = { min = 15, max = 20 },\n            duration = 60,\n            chance = 90,\n            cars = {\n                { model = 'cypher',    label = 'CYPHER' },\n                { model = 'comet6',    label = 'COMET S2' },\n                { model = 'italirsx',  label = 'ITALI RSX' },\n                { model = 'tenf',      label = '10F' },\n                { model = 'vectre',    label = 'VECTRE' },\n                { model = 'growler',   label = 'GROWLER' },\n                { model = 'sultan3',   label = 'SULTAN CUSTOM' },\n                { model = 'remus',     label = 'REMUS' },\n                { model = 'pariah',    label = 'PARIAH' },\n                { model = 'drafter',   label = '8F DRAFTER' },\n                { model = 'banshee2',  label = 'BANSHEE 900R' },\n                { model = 'neon',      label = 'NEON' },\n                { model = 'coquette4', label = 'COQUETTE D10' },\n                { model = 'sugoi',     label = 'SUGOI' }\n            },\n            itemRewards = {\n                money = { min = 1500, max = 2000 },\n                black_money = { min = 30000, max = 50000 }\n            }\n        },\n        {\n            label = 'S+',\n            requiredLevel = 6,\n            elo = { min = 10, max = 15 },\n            rep = { min = 10, max = 15 },\n            duration = 60,\n            chance = 75,\n            cars = {\n                { model = 'zeno',     label = 'ZENO' },\n                { model = 'corsita',  label = 'CORSITA' },\n                { model = 'krieger',  label = 'KRIEGER' },\n                { model = 'vacca',    label = 'VACCA' },\n                { model = 'tyrant',   label = 'TYRANT' },\n                { model = 'italigto', label = 'ITALI GTO' },\n                { model = 'entity2',  label = 'ENTITY XXR' },\n                { model = 'xa21',     label = 'XA-21' },\n                { model = 'torero2',  label = 'TORERO XO' },\n                { model = 'ignus',    label = 'IGNUS' }\n            },\n            itemRewards = {\n                money = { min = 2500, max = 3000 },\n                black_money = { min = 50000, max = 80000 }\n            }\n        }\n    }\n}"}},"/boosting/Integrations/Fd_laptop":{"title":"FD Laptop","data":{"":"Github Repository","enable-compatibility#Enable compatibility":"Locate the shared/config.lua and toggle Config.FDLaptop to true/false"}},"/boosting/Integrations/Rahe_boosting":{"title":"RAHE Boosting Migration","data":{"run-migration#Run migration":"Execute convertrahe in server console.","remove-functionality#Remove functionality":"Remove convertrahe command in server/bridge/_main.lua line 171","make-level-adjustments#Make level adjustments":"Configure Config.BaseElo & Config.EloModifier to match your needs"}},"/boosting/Missions":{"title":"Evolent Boosting","data":{"":"By default we already provide 5 out of box missions, 3 low tier, 1 mid tier and 1 high tier missions.","create-your-own-mission#Create your own mission":"Write server side data in contract.data (this gets passed to client-side).\nWrite client side data in Contracts[data.contractId].\nGetBoostVehicle and DeliverVehicle is recommended as first & last step.\nWhile adding a mission to a class, remember, index matters.\nClient-side preparation happens for all group members.\nAll validation happens through the contract.leaderId","create-server-side-mission-logic#Create server side mission logic.":"Create a new file in server/missions/ named whatever... In our example (test)\nlocal missionModule = require('modules.mission')\nlocal Mission = missionModule.Mission\nlocal Step = missionModule.Step\nreturn Mission:new({\n    steps = {\n        GetBoostVehicle,\n        Step:new({\n            title = \"Step 2\",\n            locations = {},\n            disableGps = true,\n            isComplete = function(self, contract)\n                -- SERVER VALIDATION FOR COMPLETION\n                return true\n            end,\n            complete = function(self, contract)\n                -- EXECUTE SOME ACTION WHEN STEP GETS COMPLETED\n            end,\n            preparation = function(self, contract, location)\n                -- THIS GETS EXECUTED ONLY ONCE WHEN THE STEP GETS STARTED\n            end\n        }),\n        DeliverVehicle\n    },\n    requiredItems = {\n        advancedlockpick = 1\n    }\n})","add-server-side-mission-to-list#Add server side mission to list":"Import your mission module in server/missions/missions.lua and add it to the appropriate mission class list.\nlocal PaintMission = require 'server.missions.paint'\nlocal RimsMission = require 'server.missions.rims'\nlocal TrackerMission = require 'server.missions.tracker'\nlocal TowerMission = require 'server.missions.tower'\nlocal GangMission = require 'server.missions.gang'\nlocal TestMission = require 'server.missions.test'\nMissions[1] = {\n    [\"paint\"] = PaintMission,\n    [\"rims\"] = RimsMission,\n    [\"tracker\"] = TrackerMission\n}\nMissions[2] = {\n    [\"paint\"] = PaintMission,\n    [\"rims\"] = RimsMission,\n    [\"tracker\"] = TrackerMission\n}\nMissions[3] = {\n    [\"tower\"] = TowerMission,\n}\nMissions[4] = {\n    [\"tower\"] = TowerMission,\n    -- THIS GOT ADDED TO A TIER MISSION\n    [\"test\"] = TestMission,\n}\nMissions[5] = {\n    [\"gang\"] = GangMission\n}\nMissions[6] = {\n    [\"gang\"] = GangMission\n}","repeat-the-process-in-clientmissions#Repeat the process in client/missions":""}},"/boosting/Types":{"title":"Evolent Boosting","data":{"all-types#All types":"Here is listed all types in our resource.\n---@class Step\n---@field title string\n---@field locations vector4[]\n---@field isComplete fun(self: Step, contract: Contract, location: vector4): boolean\n---@field preparation? fun(self: Step, contract: Contract, location: vector4): any\n---@class Mission\n---@field steps Step[]\n---@field requiredItems table<string, number> -- Item name â†’ count\n---@class ItemData\n---@field name string\n---@field label string\n---@field count number\n---@class CarData\n---@field model string\n---@field label string\n---@class Profile\n---@field stateId number\n---@field username string\n---@field imageUrl string\n---@field rep number\n---@field elo number\n---@field wins number\n---@field loses number\n---@field source number\n---@class Contract\n---@field id string\n---@field leaderId string\n---@field classId number\n---@field classLabel string\n---@field requiredLevel number\n---@field missionId string\n---@field mission Mission\n---@field car CarData\n---@field elo number\n---@field rep number\n---@field currentStep number\n---@field isStepActive boolean\n---@field duration number\n---@field group Profile[]\n---@field plate string\n---@field requiredItems ItemData[]\n---@field itemRewards ItemData[]\n---@field data table<string, any>\n---@field pendingInvites table<number, string>\n---@class StepData\n---@field currentStep number\n---@field serverData table<string, any>           -- Arbitrary server-side state shared with the client\n---@field missionId string\n---@field classId number                          -- Contract class ID (e.g., D, C, B, etc.)\n---@field contractId string\n---@field leaderId number                         -- State ID of the contract leader\n---@field plate string\n---@field car CarData                             -- Vehicle model and label\n---@class Step\n---@field isComplete fun(data: StepData): boolean -- Required. Checks if the step is complete\n---@field preparation? fun(data: StepData): void  -- Optional. Setup before step starts\n---@field onComplete? fun(data: StepData): void   -- Optional. Cleanup when step completes\n---@class ClientMission\n---@field steps Step[]                            -- Sequence of mission steps\n---@field canceled fun(contract: Contract): void  -- Called if mission is aborted"}},"/":{"title":"Welcome to Evolent","data":{"":"Hey there! We're Evolent, and we love making cool stuff for FiveM. Here you'll find documentation for our resources!","meet-our-team#Meet our Team":""}},"/skills":{"title":"Evolent Skills","data":{"":"View on GitHub\nView Releases\nEvolent Skills is an advanced script for managing player skills in your FiveM server, supporting both QBCore and ESX frameworks.","installation#Installation":"","step-1-install-dependencies#Step 1: Install Dependencies":"Ensure you have ox_lib and oxmysql installed.","step-2-download-evolent-skills#Step 2: Download Evolent Skills":"You can either download a release or clone the source code.\ngit clone https://github.com/evolent-labs/evolent_skills.git\ncd evolent_skills\npnpm i\npnpm run build","step-3-configuration#Step 3: Configuration":"Configure the config.lua file according to your server's needs. Below is an example configuration.\nreturn {\n    ---@type 'qb'|'esx'\n    Framework = 'qb',  -- Choose your framework\n    --- @type table<string, Skill>\n    Skills = {\n        driving = {  -- Skill identifier\n            label = 'Driving',  -- Skill label\n            baseXp = 120,  -- XP needed to achieve level 2\n            nextLevelMultiplier = 1.1,  -- Multiplier for each level\n            maxLevel = 100,  -- Max skill level\n            icon = 'fas fa-car',  -- Icon from FontAwesome\n            color = '#AFC1FF'  -- Color used in the UI\n        },\n    }\n}","step-4-starting-the-script#Step 4: Starting the Script":"Add evolent_skills to your server's resource list and start the script.\nensure evolent_skills"}},"/skills/Functions/Client":{"title":"Client Exports","data":{"getskilllevel#getSkillLevel":"Gets the current level of a player's skill.\nexports.evolent_skills:getSkillLevel(skill)\nskill: string\nExample:\nlocal skillLevel = exports.evolent_skills:getSkillLevel('driving')\nif skillLevel > 10 then\n    print('Player is above level 10!')\nend","getskillxp#getSkillXp":"Gets the current XP of a player's skill.\nexports.evolent_skills:getSkillXp(skill)\nskill: string\nExample:\nlocal skillXp = exports.evolent_skills:getSkillXp('shooting')\nprint(skillXp) -- 182","getallskills#getAllSkills":"Gets all skills and their levels for a player.\nexports.evolent_skills:getAllSkills()\nExample:\nlocal skills = exports.evolent_skills:getAllSkills()\nfor skillName, skillData in pairs(skills) do\n    print(skillName, skillData.level, skillData.xp)\nend"}},"/skills/Functions/Server":{"title":"Server Exports","data":{"addxp#addXp":"Adds a specified amount of XP to a player's skill.\nexports.evolent_skills:addXp(playerId, skill, xpAmount)\nplayerId: number\nskill: string\nxpAmount: number\nExample:\nRegisterCommand('addshootingskill', function(source, args)\n    local target = args[1]\n    exports.evolent_skills:addXp(target, 'shooting', 50)\nend)","removexp#removeXp":"Removes a specified amount of XP to a player's skill.\nexports.evolent_skills:removeXp(playerId, skill, xpAmount)\nplayerId: number\nskill: string\nxpAmount: number\nExample:\nRegisterCommand('removedrivingskill', function(source, args)\n    local target = args[1]\n    exports.evolent_skills:addXp(target, 'driving', 20)\nend)","getskilllevel#getSkillLevel":"Gets the current level of a player's skill.\nexports.evolent_skills:getSkillLevel(playerId, skill)\nplayerId: number\nskill: string\nExample:\nlocal skillLevel = exports.evolent_skills:getSkillLevel(1, 'driving')\nif skillLevel > 10 then\n    print('Player is above level 10!')\nend","getskillxp#getSkillXp":"Gets the current XP of a player's skill.\nexports.evolent_skills:getSkillXp(playerId, skill)\nplayerId: number\nskill: string\nExample:\nlocal skillXp = exports.evolent_skills:getSkillXp(1, 'shooting')\nprint(skillXp) -- 182","setskilllevel#setSkillLevel":"Sets the level of a player's skill, recalculating the XP based on the level.\nexports.evolent_skills:setSkillLevel(playerId, skill, level)\nplayerId: number\nskill: string\nlevel: number\nExample:\nif isTooDumb(source) then\n    exports.evolent_skills:setSkillLevel(source, 'driving', 50)\nend","resetskill#resetSkill":"Resets a player's skill to level 1 with 0 XP.\nexports.evolent_skills:resetSkill(playerId, skill, level)\nplayerId: number\nskill: string\nExample:\nif isExploiting(source) then\n    exports.evolent_skills:resetSkill(source, 'sales')\nend","getallskills#getAllSkills":"Gets all skills and their levels for a player.\nexports.evolent_skills:getAllSkills(playerId)\nplayerId: number\nskill: string\nExample:\nlocal skills = exports.evolent_skills:getAllSkills(source)\nfor skillName, skillData in pairs(skills) do\n    print(skillName, skillData.level, skillData.xp)\nend"}}}